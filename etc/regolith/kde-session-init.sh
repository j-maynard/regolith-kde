#!/bin/bash
# This script initializes Regolith Xresources and launches i3.

set -Eeu -o pipefail

# File Locations - Optional User Overrides
USER_XRESOURCE_OVERRIDE_FILE="$HOME/.config/regolith/Xresources"
USER_XRESOURCE_SEARCH_PATH="$HOME/.config/regolith/Xresources.d"

# File Locations - System Defaults
DEFAULT_XRESOURCE_LOOK_FILE="/usr/share/regolith-look/minimal/root"
ETC_XRESOURCE_DIR="/etc/regolith/Xresources.d"
DEFAULT_SYS_I3_CONFIG_FILE="/etc/regolith/i3/config"
DEFAULT_USER_I3_CONFIG_FILE="$HOME/.config/regolith/i3/config"
DEFAULT_SYS_CONFIG_DIR="/etc/regolith/i3/conf.d"

# File Locations - Baseline
BASELINE_XRESOURCE_FILE="$HOME/.Xresources"

# Determine partial or default config modes.
is_partial_mode() {
    # A missing partial config dir means partial mode is off.
    if [ ! -d "$DEFAULT_SYS_CONFIG_DIR" ]; then
        return 1
    fi

    # The existence of an Xresource key/value pair of i3-wm.config.mode: default shall mean that the config partial mode is off. 
    if [ "$(xrescat i3-wm.config.mode)" == "default" ]; then
        return 1
    fi

    # The existence of an Xresource key/value pair of i3-wm.config.mode: partial shall mean that the config partial mode is on.
    if [ "$(xrescat i3-wm.config.mode)" == "partial" ]; then
        return 0
    fi

    # The existence of a file at /etc/regolith/i3/config shall mean that the config partial mode is off
    if [ -f "$DEFAULT_SYS_I3_CONFIG_FILE" ]; then
        return 1
    fi

    # The existence of a file at /etc/regolith/i3/config shall mean that the config partial mode is off. 
    if [ -f "$DEFAULT_USER_I3_CONFIG_FILE" ]; then
        return 1
    else
        return 0 # true
    fi
}

# Determine where the default i3 config file is
# Sets I3_CONFIG_FILE
resolve_default_config_file() {
    if [ -f "$DEFAULT_USER_I3_CONFIG_FILE" ]; then
        I3_CONFIG_FILE="$DEFAULT_USER_I3_CONFIG_FILE"
    else
        I3_CONFIG_FILE="$DEFAULT_SYS_I3_CONFIG_FILE"
    fi
}

# Overwrite an existing file and add header
generate_partial_config_header() {
    SCRIPTPATH="$( cd "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"
    if [ ! -d "$GENERATED_CONFIG_DIR" ]; then
        mkdir -p "$GENERATED_CONFIG_DIR"
    fi
    echo "# This config file was generated by $SCRIPTPATH at $(date)" > "$GENERATED_CONFIG_FILE"
    echo "# DO NOT make edits here, they will be lost.  Instead, see [TBD] for details." >> "$GENERATED_CONFIG_FILE"
}

# Launch i3 in default config file
start_i3_default_config_mode() {
    resolve_default_config_file
    echo "Regolith is launching i3-gaps with $I3_CONFIG_FILE"
    i3 -c "$I3_CONFIG_FILE"
}

# Launch i3 in partial config file
start_i3_partial_config_mode() {
    I3_PARTIAL_DIR=$DEFAULT_SYS_CONFIG_DIR

    GENERATED_CONFIG_DIR="$HOME/.config/regolith/i3"
    GENERATED_CONFIG_FILE="$GENERATED_CONFIG_DIR/config-generated"

    generate_partial_config_header

    for filename in "$I3_PARTIAL_DIR"/*; do
        echo "#+ $filename ($(date +%s))" >> "$GENERATED_CONFIG_FILE"
        cat "$filename" >> "$GENERATED_CONFIG_FILE"
    done

    echo "Regolith is launching i3-gaps with $GENERATED_CONFIG_FILE"
    i3 -c "$GENERATED_CONFIG_FILE"
}


# Load default Xresources
load_standard_xres() {    
    if [ -f "$BASELINE_XRESOURCE_FILE" ]; then
        xrdb -merge "$BASELINE_XRESOURCE_FILE"
    fi
}

# Change the quotes in workspace names from double to to single.
# Due to a limitation of the preprocessor they have double quotes.
# The i3-wm workspace command fails with double quotes in the name
xres_i3_cleanup() {   
    xrdb -query |grep i3-wm.workspace.|sed "s/\"/'/g"|xrdb -merge
}

# Generate a Xresource file from merging the following into ~/.config/regolith/Xresources-generated:
# 1. /usr/share/regolith-look/minimal/root or override defined in ~/.Xresources
# 2. ~/.config/regolith/Xresources
# 3. /etc/regolith/Xresources.d
load_regolith_xres() {
    GENERATED_XRES_DIR="$HOME/.config/regolith"
    GENERATED_XRES_FILE="$GENERATED_XRES_DIR/Xresources-generated"
    if [ ! -d "$GENERATED_XRES_DIR" ]; then
        mkdir -p "$GENERATED_XRES_DIR"
    fi
    
    LOOK_STYLE_ROOT_PATH=$(xrescat regolith.look.path $DEFAULT_XRESOURCE_LOOK_FILE)

    echo "!+ $LOOK_STYLE_ROOT_PATH ($(date +%s))" > "$GENERATED_XRES_FILE"
    cat "$LOOK_STYLE_ROOT_PATH" >> "$GENERATED_XRES_FILE"

    if [ -f "$USER_XRESOURCE_OVERRIDE_FILE" ]; then
        echo "!+ $USER_XRESOURCE_OVERRIDE_FILE ($(date +%s))" >> "$GENERATED_XRES_FILE"
        cat "$USER_XRESOURCE_OVERRIDE_FILE" >> "$GENERATED_XRES_FILE"
    fi

    for filename in "$ETC_XRESOURCE_DIR"/*; do
        echo "!+ $filename ($(date +%s))" >> "$GENERATED_XRES_FILE"
        cat "$filename" >> "$GENERATED_XRES_FILE"
    done

    xrdb -I"$USER_XRESOURCE_SEARCH_PATH" -merge "$GENERATED_XRES_FILE"
}

# --------- Script Main -----------

load_standard_xres  # ~/.Xresources
load_regolith_xres      # ~/.config/regolith/Xresources
